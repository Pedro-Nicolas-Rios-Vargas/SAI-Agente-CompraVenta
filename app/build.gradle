/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'eclipse'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven {
        url = 'https://jade.tilab.com/maven/'
    }
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.0.1-jre'

    implementation 'com.tilab.jade:jade:4.5.0'
    implementation 'com.tilab.jade:jade-misc:2.8.0'
    implementation 'com.tilab.jade:jade-test-suite:1.13.0'
    implementation 'com.tilab.jade:jade-wsdc:2.7.0'
    implementation 'com.tilab.jade:jade-xml-codec:1.11.0'
}

application {
    // Define the main class for the application.
    mainClass = 'src.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

task runAgent(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath

    mainClass = 'jade.Boot'
    args '-gui'//, 'comprador:agentes.Comprador(Python)'

    standardInput System.in
}
